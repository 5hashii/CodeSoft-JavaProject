package QuizApplication;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.InputMismatchException;
import java.util.Scanner;
import java.util.Timer;
import java.util.TimerTask;

class Question {
    String question;
    ArrayList<String> options;
    int correctAnswer;
    int timeLimit;  

    Question(String question, ArrayList<String> options, int correctAnswer, int timeLimit) {
        this.question = question;
        this.options = options;
        this.correctAnswer = correctAnswer;
        this.timeLimit = timeLimit;
    }
}

public class QuizApplication {
    static ArrayList<Question> questions = new ArrayList<Question>();
    static int score = 0;
    static int currentQuestion = 0;
    static Timer timer;
    static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        // Add questions and options
        questions.add(new Question("What is the capital of France?",
                new ArrayList<String>(Arrays.asList("Paris", "London", "Berlin", "Madrid")), 0, 10));
        questions.add(new Question("Which planet is known as the Red Planet?",
                new ArrayList<String>(Arrays.asList("Mars", "Venus", "Jupiter", "Saturn")), 0, 15));
         

        startQuiz();
    }

    static void startQuiz() {
        while (currentQuestion < questions.size()) {
            Question question = questions.get(currentQuestion);
            displayQuestion(question);
            getUserAnswer(question);
        }

        displayResult();
    }

    static void displayQuestion(Question question) {
        System.out.println(question.question);
        for (int i = 0; i < question.options.size(); i++) {
            System.out.println((i + 1) + ". " + question.options.get(i));
        }
    }

    static void getUserAnswer(final Question question) {
        timer = new Timer();
        timer.schedule(new TimerTask() {
            @Override
            public void run() {
                System.out.println("Time's up! Moving to the next question.");
                checkAnswer(question, -1); // -1 indicates time's up
            }
        }, question.timeLimit * 1000);

        System.out.print("Enter your answer (1-" + question.options.size() + "): ");
        try {
            int answer = scanner.nextInt();
            if (answer < 1 || answer > question.options.size()) {
                System.out.println("Invalid answer. Moving to the next question.");
                checkAnswer(question, -1);
            } else {
                timer.cancel();
                checkAnswer(question, answer);
            }
        } catch (InputMismatchException e) {
            System.out.println("Invalid input. Moving to the next question.");
            scanner.next(); // clear the invalid input
            checkAnswer(question, -1);
        }
    }

    static void checkAnswer(Question question, int answer) {
        if (answer == question.correctAnswer + 1) {
            System.out.println("Correct!");
            score++;
        } else if (answer == -1) {
            System.out.println("Time's up! The correct answer is: " + question.options.get(question.correctAnswer));
        } else {
            System.out.println("Incorrect. The correct answer is: " + question.options.get(question.correctAnswer));
        }
        currentQuestion++;
    }

    static void displayResult() {
        System.out.println("\nQuiz Results:");
        System.out.println("Total Score: " + score + "/" + questions.size());
    }
}
